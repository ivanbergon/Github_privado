)
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_3,parameters=c(0.01,5))
find.hyper(mod_4,parameters=c(0.01,5))
# Models estimators
summary(mod_1)
summary(mod_2)
summary(mod_3)
summary(mod_4)
# ANALYZING PREDICTIONS DEVIATIONS
testset_DF$pred_1 <- predict(mod_1, newdata=testset_DF, type = "response")
testset_OIL$pred_2 <- predict(mod_2, newdata=testset_OIL, type = "response")
testset_DF$pred_3 <- predict(mod_3, newdata=testset_DF[,-12], type = "response")
testset_OIL$pred_4 <- predict(mod_4, newdata=testset_OIL[,-26], type = "response")
testset_DF$pred.deviation_1  <- round(testset_DF$pred_1/testset_DF$OILPRICE,10)
testset_OIL$pred.deviation_2 <- round(testset_OIL$pred_2/testset_OIL$OILPRICE,10)
testset_DF$pred.deviation_3  <- round(testset_DF$pred_3/testset_DF$OILPRICE,10)
testset_OIL$pred.deviation_4 <- round(testset_OIL$pred_4/testset_OIL$OILPRICE,10)
testset_DF$pred.deviation_1  <- testset_DF$pred.deviation_1-1
testset_OIL$pred.deviation_2 <- testset_OIL$pred.deviation_2-1
testset_DF$pred.deviation_3  <- testset_DF$pred.deviation_3-1
testset_OIL$pred.deviation_4 <- testset_OIL$pred.deviation_4-1
par(mfrow=c(2,2))
hist(100*testset_DF$pred.deviation_1, main="Prediction 1 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_2, main="Prediction 2 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_DF$pred.deviation_3, main="Prediction 3 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_4, main="Prediction 4 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
par(mfrow=c(2,2))
hist(100*testset_DF$pred.deviation_1, main="Prediction 1 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_2, main="Prediction 2 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_DF$pred.deviation_3, main="Prediction 3 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_4, main="Prediction 4 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
plot(mod_1)
plot(mod_2)
plot(mod_3)
plot(mod_4)
# Plotting residuals
par(mfrow=c(2,2))
wp(mod_1)
wp(mod_2)
wp(mod_3)
wp(mod_4)
# Getting each model's non parametric test
GD = c(mod_1$G.deviance,mod_2$G.deviance,mod_3$G.deviance,mod_4$G.deviance)#Deviation
AIC = c(mod_1$aic,mod_2$aic,mod_3$aic,mod_4$aic)# Overfitting
SBC = c(mod_1$sbc,mod_3$sbc,mod_4$sbc,mod_4$sbc)# Overfitting
GD # First Line
AIC # Second line
SBC # Third line
# 1 model           #2 model           #3 model          # 4 model
plot(x, fitted(abd1,"mu"))
plot(X, fitted(abd1,"mu"))
plot(idx_oil, fitted(abd1,"mu"))
plot(idx_OIL, fitted(abd1,"mu"))
plot(idx_OIL, fitted(mod_1,"mu"))
fitted(mod_1,"sigma")[1]
help('dim')
AIC(mod_1, mod_2, mod_3, mod4)
AIC(mod_1, mod_2, mod_3, mod_4)
GAIC(mod_1, mod_2, mod_3, mod_4)
install.packages("ggplot2")
install.packages("tidyverse")
install.packages("tidyr")
install.packages(c("gamlss","gamlss.add","gamlss.dist"))
install.packages('corrplot')
# install.packages("ggplot2")
# install.packages("tidyverse")
# install.packages("tidyr")
# install.packages(c("gamlss","gamlss.add","gamlss.dist"))
# install.packages('corrplot')
# install.packages('cowplot')
# install.packages('Hmisc')
library(gamlss)
library(gamlss.add)
library(gamlss.dist)
library(ggplot2)
library(corrplot)
library(cowplot)
library(Hmisc)
data(oil)
```
data(oil)
```
head(oil, 3)
head(oil, 3)
print(paste("Number of records: ", nrow(oil)))
print(paste("Number of features: ", ncol(oil)))
colnames(oil)
df = oil[,-2:-15]
head(df,3)
head(oil, 3)
# install.packages("ggplot2")
# install.packages("tidyverse")
# install.packages("tidyr")
# install.packages(c("gamlss","gamlss.add","gamlss.dist"))
# install.packages('corrplot')
# install.packages('cowplot')
# install.packages('Hmisc')
library(gamlss)
library(gamlss.add)
library(gamlss.dist)
library(ggplot2)
library(corrplot)
library(cowplot)
library(Hmisc)
data(oil)
```
library(gamlss)
library(gamlss.add)
library(gamlss.dist)
library(ggplot2)
library(corrplot)
library(cowplot)
library(Hmisc)
data(oil)
```
head(oil, 3)
print(paste("Number of records: ", nrow(oil)))
print(paste("Number of features: ", ncol(oil)))
colnames(oil)
df = oil[,-2:-15]
head(df,3)
is.null(oil) # There's no null value
sum(is.na(oil)) # No NA's
summary(df)
```
p1 <- ggplot(df, aes(SPX_log, OILPRICE)) + geom_point()
p2 <- ggplot(df, aes(DX1_log, OILPRICE)) +  geom_point()
p3 <- ggplot(df, aes(BDIY_log, OILPRICE)) +  geom_point()
p4 <- ggplot(df, aes(GC1_log, OILPRICE)) +  geom_point()
p5 <- ggplot(df, aes(HO1_log, OILPRICE)) +  geom_point()
p6 <- ggplot(df, aes(FTSE_log, OILPRICE)) +  geom_point()
p7 <- ggplot(df, aes(USCI_log, OILPRICE)) +  geom_point()
p8 <- ggplot(df, aes(GNR_log, OILPRICE)) +  geom_point()
p9 <- ggplot(df, aes(SHCOMP_log, OILPRICE)) +  geom_point()
plot_grid(p1,
p2,
p3,
p4,
p5,
p6,
p7,
p8,
p9,
labels = c('A', 'B', 'D', 'E', 'F', 'G', 'H', 'I', 'J'))# Zoom it (better visualization)
attach(df)
par(mfrow=c(3,4))
hist(OILPRICE, main="Oil Price")
hist(BDIY_log, main="Baltic Dry")
hist(SPX_log, main="S&P 500 index")
hist(DX1_log, main="US Dollar Index")
hist(GC1_log, main="Gold price contract trades")
hist(HO1_log, main="Heating Oil price contract traded")
hist(USCI_log, main="United States Commodity Index")
hist(GNR_log, main="S&P Global Natural Resources Index")
hist(SHCOMP_log,main="Shanghai Stock Exchange Composite Index")
hist(FTSE_log, main="FTSE 100 Index")
hist(respLAG, main="OILPRICE - lagged version of the response variable")
```
corr_mat=cor(df,method="s")
corrplot(corr_mat, method = "color",
order = "hclust",
addCoef.col = "black",
tl.col = "black")
Matrix1 <- rcorr(as.matrix(df), type = "spearman")
print(Matrix1$P)# P-value of the correlations
histDist(df$OILPRICE,
family = BCPE ,
density = T)
```
histDist(df$OILPRICE,
family = BCPE ,
density = T)
```
# DF dataset cut off the past traded Oil contracts and keep only the lagged variable
idx_DF = sample(dim(df)[1] , 0.70*dim(df)[1] , replace = F)
trainset_DF = df[idx_DF , ]
testset_DF = df[-idx_DF , ]
# OIL dataset keeps all the variables with no changes
idx_OIL = sample(dim(oil)[1] , 0.70*dim(oil)[1] , replace = F)
trainset_OIL = oil[idx_OIL , ]
testset_OIL = oil[-idx_OIL , ]
summary(df)
```
summary(df)
summary(df)
p1 <- ggplot(df, aes(SPX_log, OILPRICE)) + geom_point()
p2 <- ggplot(df, aes(DX1_log, OILPRICE)) +  geom_point()
p3 <- ggplot(df, aes(BDIY_log, OILPRICE)) +  geom_point()
p4 <- ggplot(df, aes(GC1_log, OILPRICE)) +  geom_point()
p5 <- ggplot(df, aes(HO1_log, OILPRICE)) +  geom_point()
p6 <- ggplot(df, aes(FTSE_log, OILPRICE)) +  geom_point()
p7 <- ggplot(df, aes(USCI_log, OILPRICE)) +  geom_point()
p8 <- ggplot(df, aes(GNR_log, OILPRICE)) +  geom_point()
p9 <- ggplot(df, aes(SHCOMP_log, OILPRICE)) +  geom_point()
plot_grid(p1,
p2,
p3,
p4,
p5,
p6,
p7,
p8,
p9,
labels = c('A', 'B', 'D', 'E', 'F', 'G', 'H', 'I', 'J'))# Zoom it (better visualization)
attach(df)
par(mfrow=c(3,4))
hist(OILPRICE, main="Oil Price")
hist(BDIY_log, main="Baltic Dry")
hist(SPX_log, main="S&P 500 index")
hist(DX1_log, main="US Dollar Index")
hist(GC1_log, main="Gold price contract trades")
hist(HO1_log, main="Heating Oil price contract traded")
hist(USCI_log, main="United States Commodity Index")
hist(GNR_log, main="S&P Global Natural Resources Index")
hist(SHCOMP_log,main="Shanghai Stock Exchange Composite Index")
hist(FTSE_log, main="FTSE 100 Index")
hist(respLAG, main="OILPRICE - lagged version of the response variable")
corr_mat=cor(df,method="s")
corrplot(corr_mat, method = "color",
order = "hclust",
addCoef.col = "black",
tl.col = "black")
Matrix1 <- rcorr(as.matrix(df), type = "spearman")
print(Matrix1$P)# P-value of the correlations
histDist(df$OILPRICE,
family = BCPE ,
density = T)
# DF dataset cut off the past traded Oil contracts and keep only the lagged variable
idx_DF = sample(dim(df)[1] , 0.70*dim(df)[1] , replace = F)
trainset_DF = df[idx_DF , ]
testset_DF = df[-idx_DF , ]
# OIL dataset keeps all the variables with no changes
idx_OIL = sample(dim(oil)[1] , 0.70*dim(oil)[1] , replace = F)
trainset_OIL = oil[idx_OIL , ]
testset_OIL = oil[-idx_OIL , ]
# Trainning the models: WITHOUT additive terms
mod_1 <- gamlss(OILPRICE ~ ., family = BCPE, data = trainset_DF, control = gamlss.control(n.cyc = 20))  # Model 1
mod_2 <- gamlss(OILPRICE ~ ., family = BCPE, data = trainset_OIL, control = gamlss.control(n.cyc = 20)) # model 2
# Trainning the models: with additive terms
# model 3
mod_3 <-
gamlss(
OILPRICE ~ cs(BDIY_log, df = 2) + cs(SPX_log, df = 2) + cs(DX1_log, df = 2) + cs(GC1_log, df = 2) +
cs(USCI_log, df = 2) + cs(GNR_log, df = 2) + cs(SHCOMP_log, df = 2) + cs(FTSE_log, df = 2) + cs(respLAG, df = 2) ,
family = BCPE,
data = trainset_DF
)
# model 4
mod_4 <-
gamlss(
OILPRICE ~ cs(CL2_log, df = 2) + cs(CL3_log, df = 2) + cs(CL4_log, df = 2) +
cs(CL5_log, df = 2) + cs(CL6_log, df = 2) + cs(CL7_log, df = 2) +
cs(CL8_log, df = 2) + cs(CL9_log, df = 2) + cs(CL10_log, df = 2) +
cs(CL11_log, df = 2) + cs(CL12_log, df = 2) + cs(CL13_log, df = 2) +
cs(CL14_log, df = 2) + cs(CL15_log, df = 2) +
cs(BDIY_log, df = 2) + cs(SPX_log, df = 2) + cs(DX1_log, df = 2) + cs(GC1_log, df = 2) +
cs(USCI_log, df = 2) + cs(GNR_log, df = 2) + cs(SHCOMP_log, df = 2) + cs(FTSE_log, df = 2) + cs(respLAG, df = 2) ,
family = BCPE,
data = trainset_OIL
)
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_3,parameters=c(0.01,5))
find.hyper(mod_4,parameters=c(0.01,5))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,5))
find.hyper(mod_2,parameters=c(0.01,5))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,5))
find.hyper(mod_2,parameters=c(0.01,5))
find.hyper(mod_3,parameters=c(0.01,5))
find.hyper(mod_4,parameters=c(0.01,5))
# Models estimators
summary(mod_1)
summary(mod_2)
summary(mod_3)
summary(mod_4)
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,15))
find.hyper(mod_2,parameters=c(0.01,15))
find.hyper(mod_3,parameters=c(0.01,15))
find.hyper(mod_4,parameters=c(0.01,15))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,25))
find.hyper(mod_2,parameters=c(0.01,25))
find.hyper(mod_3,parameters=c(0.01,25))
find.hyper(mod_4,parameters=c(0.01,25))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,5))
find.hyper(mod_2,parameters=c(0.01,5))
find.hyper(mod_3,parameters=c(0.01,5))
find.hyper(mod_4,parameters=c(0.01,5))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(3,0.5))
find.hyper(mod_2,parameters=c(3,0.5))
find.hyper(mod_3,parameters=c(3,0.5))
find.hyper(mod_4,parameters=c(3,0.5))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(1,15))
find.hyper(mod_2,parameters=c(1,15))
find.hyper(mod_3,parameters=c(1,15))
find.hyper(mod_4,parameters=c(1,15))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,5), lower=c(1,0.001), steps=c(0.1,0.001))
find.hyper(mod_2,parameters=c(0.01,5), lower=c(1,0.001), steps=c(0.1,0.001))
find.hyper(mod_3,parameters=c(0.01,5), lower=c(1,0.001), steps=c(0.1,0.001))
find.hyper(mod_4,parameters=c(0.01,5), lower=c(1,0.001), steps=c(0.1,0.001))
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,5))
find.hyper(mod_2,parameters=c(0.01,5))
find.hyper(mod_3,parameters=c(0.01,5))
find.hyper(mod_4,parameters=c(0.01,5))
# ANALYZING PREDICTIONS DEVIATIONS
testset_DF$pred_1 <- predict(mod_1, newdata=testset_DF, type = "response")
testset_OIL$pred_2 <- predict(mod_2, newdata=testset_OIL, type = "response")
testset_DF$pred_3 <- predict(mod_3, newdata=testset_DF[,-12], type = "response")
testset_OIL$pred_4 <- predict(mod_4, newdata=testset_OIL[,-26], type = "response")
testset_DF$pred.deviation_1  <- round(testset_DF$pred_1/testset_DF$OILPRICE,10)
testset_OIL$pred.deviation_2 <- round(testset_OIL$pred_2/testset_OIL$OILPRICE,10)
testset_DF$pred.deviation_3  <- round(testset_DF$pred_3/testset_DF$OILPRICE,10)
testset_OIL$pred.deviation_4 <- round(testset_OIL$pred_4/testset_OIL$OILPRICE,10)
testset_DF$pred.deviation_1  <- testset_DF$pred.deviation_1-1
testset_OIL$pred.deviation_2 <- testset_OIL$pred.deviation_2-1
testset_DF$pred.deviation_3  <- testset_DF$pred.deviation_3-1
testset_OIL$pred.deviation_4 <- testset_OIL$pred.deviation_4-1
par(mfrow=c(2,2))
hist(100*testset_DF$pred.deviation_1, main="Prediction 1 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_2, main="Prediction 2 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_DF$pred.deviation_3, main="Prediction 3 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_4, main="Prediction 4 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
par(mfrow=c(2,2))
hist(100*testset_DF$pred.deviation_1, main="Prediction 1 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_2, main="Prediction 2 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_DF$pred.deviation_3, main="Prediction 3 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_4, main="Prediction 4 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
plot(mod_1)
plot(mod_2)
plot(mod_3)
plot(mod_4)
# Plotting residuals
par(mfrow=c(2,2))
wp(mod_1)
wp(mod_2)
wp(mod_3)
wp(mod_4)
# Getting each model's non parametric test
GD = c(mod_1$G.deviance,mod_2$G.deviance,mod_3$G.deviance,mod_4$G.deviance)#Deviation
AIC = c(mod_1$aic,mod_2$aic,mod_3$aic,mod_4$aic)# Overfitting
SBC = c(mod_1$sbc,mod_3$sbc,mod_4$sbc,mod_4$sbc)# Overfitting
GD # First Line
AIC # Second line
SBC # Third line
# 1 model           #2 model           #3 model          # 4 model
# install.packages("ggplot2")
# install.packages("tidyverse")
# install.packages("tidyr")
# install.packages(c("gamlss","gamlss.add","gamlss.dist"))
# install.packages('corrplot')
# install.packages('cowplot')
# install.packages('Hmisc')
library(gamlss)
library(gamlss.add)
library(gamlss.dist)
library(ggplot2)
library(corrplot)
library(cowplot)
library(Hmisc)
data(oil)
head(oil, 3)
print(paste("Number of records: ", nrow(oil)))
print(paste("Number of features: ", ncol(oil)))
colnames(oil)
df = oil[,-2:-15]
head(df,3)
is.null(oil) # There's no null value
sum(is.na(oil)) # No NA's
summary(df)
p1 <- ggplot(df, aes(SPX_log, OILPRICE)) + geom_point()
p2 <- ggplot(df, aes(DX1_log, OILPRICE)) +  geom_point()
p3 <- ggplot(df, aes(BDIY_log, OILPRICE)) +  geom_point()
p4 <- ggplot(df, aes(GC1_log, OILPRICE)) +  geom_point()
p5 <- ggplot(df, aes(HO1_log, OILPRICE)) +  geom_point()
p6 <- ggplot(df, aes(FTSE_log, OILPRICE)) +  geom_point()
p7 <- ggplot(df, aes(USCI_log, OILPRICE)) +  geom_point()
p8 <- ggplot(df, aes(GNR_log, OILPRICE)) +  geom_point()
p9 <- ggplot(df, aes(SHCOMP_log, OILPRICE)) +  geom_point()
plot_grid(p1,
p2,
p3,
p4,
p5,
p6,
p7,
p8,
p9,
labels = c('A', 'B', 'D', 'E', 'F', 'G', 'H', 'I', 'J'))# Zoom it (better visualization)
attach(df)
par(mfrow=c(3,4))
hist(OILPRICE, main="Oil Price")
hist(BDIY_log, main="Baltic Dry")
hist(SPX_log, main="S&P 500 index")
hist(DX1_log, main="US Dollar Index")
hist(GC1_log, main="Gold price contract trades")
hist(HO1_log, main="Heating Oil price contract traded")
hist(USCI_log, main="United States Commodity Index")
hist(GNR_log, main="S&P Global Natural Resources Index")
hist(SHCOMP_log,main="Shanghai Stock Exchange Composite Index")
hist(FTSE_log, main="FTSE 100 Index")
hist(respLAG, main="OILPRICE - lagged version of the response variable")
corr_mat=cor(df,method="s")
corrplot(corr_mat, method = "color",
order = "hclust",
addCoef.col = "black",
tl.col = "black")
Matrix1 <- rcorr(as.matrix(df), type = "spearman")
print(Matrix1$P)# P-value of the correlations
histDist(df$OILPRICE,
family = BCPE ,
density = T)
# DF dataset cut off the past traded Oil contracts and keep only the lagged variable
idx_DF = sample(dim(df)[1] , 0.70*dim(df)[1] , replace = F)
trainset_DF = df[idx_DF , ]
testset_DF = df[-idx_DF , ]
# OIL dataset keeps all the variables with no changes
idx_OIL = sample(dim(oil)[1] , 0.70*dim(oil)[1] , replace = F)
trainset_OIL = oil[idx_OIL , ]
testset_OIL = oil[-idx_OIL , ]
# Trainning the models: WITHOUT additive terms
mod_1 <- gamlss(OILPRICE ~ ., family = BCPE, data = trainset_DF, control = gamlss.control(n.cyc = 20))  # Model 1
mod_2 <- gamlss(OILPRICE ~ ., family = BCPE, data = trainset_OIL, control = gamlss.control(n.cyc = 20)) # model 2
# Trainning the models: with additive terms
# model 3
mod_3 <-
gamlss(
OILPRICE ~ cs(BDIY_log, df = 2) + cs(SPX_log, df = 2) + cs(DX1_log, df = 2) + cs(GC1_log, df = 2) +
cs(USCI_log, df = 2) + cs(GNR_log, df = 2) + cs(SHCOMP_log, df = 2) + cs(FTSE_log, df = 2) + cs(respLAG, df = 2) ,
family = BCPE,
data = trainset_DF
)
# model 4
mod_4 <-
gamlss(
OILPRICE ~ cs(CL2_log, df = 2) + cs(CL3_log, df = 2) + cs(CL4_log, df = 2) +
cs(CL5_log, df = 2) + cs(CL6_log, df = 2) + cs(CL7_log, df = 2) +
cs(CL8_log, df = 2) + cs(CL9_log, df = 2) + cs(CL10_log, df = 2) +
cs(CL11_log, df = 2) + cs(CL12_log, df = 2) + cs(CL13_log, df = 2) +
cs(CL14_log, df = 2) + cs(CL15_log, df = 2) +
cs(BDIY_log, df = 2) + cs(SPX_log, df = 2) + cs(DX1_log, df = 2) + cs(GC1_log, df = 2) +
cs(USCI_log, df = 2) + cs(GNR_log, df = 2) + cs(SHCOMP_log, df = 2) + cs(FTSE_log, df = 2) + cs(respLAG, df = 2) ,
family = BCPE,
data = trainset_OIL
)
# 0 > DF PARAMETER RANGE =< 5.
find.hyper(mod_1,parameters=c(0.01,5))
find.hyper(mod_2,parameters=c(0.01,5))
find.hyper(mod_3,parameters=c(0.01,5))
find.hyper(mod_4,parameters=c(0.01,5))
# Models estimators
summary(mod_1)
summary(mod_2)
summary(mod_3)
summary(mod_4)
# ANALYZING PREDICTIONS DEVIATIONS
testset_DF$pred_1 <- predict(mod_1, newdata=testset_DF, type = "response")
testset_OIL$pred_2 <- predict(mod_2, newdata=testset_OIL, type = "response")
testset_DF$pred_3 <- predict(mod_3, newdata=testset_DF[,-12], type = "response")
testset_OIL$pred_4 <- predict(mod_4, newdata=testset_OIL[,-26], type = "response")
testset_DF$pred.deviation_1  <- round(testset_DF$pred_1/testset_DF$OILPRICE,10)
testset_OIL$pred.deviation_2 <- round(testset_OIL$pred_2/testset_OIL$OILPRICE,10)
testset_DF$pred.deviation_3  <- round(testset_DF$pred_3/testset_DF$OILPRICE,10)
testset_OIL$pred.deviation_4 <- round(testset_OIL$pred_4/testset_OIL$OILPRICE,10)
testset_DF$pred.deviation_1  <- testset_DF$pred.deviation_1-1
testset_OIL$pred.deviation_2 <- testset_OIL$pred.deviation_2-1
testset_DF$pred.deviation_3  <- testset_DF$pred.deviation_3-1
testset_OIL$pred.deviation_4 <- testset_OIL$pred.deviation_4-1
par(mfrow=c(2,2))
hist(100*testset_DF$pred.deviation_1, main="Prediction 1 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_2, main="Prediction 2 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_DF$pred.deviation_3, main="Prediction 3 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_4, main="Prediction 4 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-2,2), ylim = c(0,150))
par(mfrow=c(2,2))
hist(100*testset_DF$pred.deviation_1, main="Prediction 1 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_2, main="Prediction 2 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_DF$pred.deviation_3, main="Prediction 3 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
hist(100*testset_OIL$pred.deviation_4, main="Prediction 4 deviation interval", xlab = "Deviation percentage", labels = T, xlim =c(-0.5,0.5), ylim = c(0,150))
plot(mod_1)
plot(mod_2)
plot(mod_3)
plot(mod_4)
# Plotting residuals
par(mfrow=c(2,2))
wp(mod_1)
wp(mod_2)
wp(mod_3)
wp(mod_4)
# Getting each model's non parametric test
GD = c(mod_1$G.deviance,mod_2$G.deviance,mod_3$G.deviance,mod_4$G.deviance)#Deviation
AIC = c(mod_1$aic,mod_2$aic,mod_3$aic,mod_4$aic)# Overfitting
SBC = c(mod_1$sbc,mod_3$sbc,mod_4$sbc,mod_4$sbc)# Overfitting
GD # First Line
AIC # Second line
SBC # Third line
# 1 model           #2 model           #3 model          # 4 model
plot(idx_OIL, fitted(mod_1,"mu"))
fitted(mod_1,"sigma")[1]
AIC(mod_1, mod_2, mod_3, mod_4)
GAIC(mod_1, mod_2, mod_3, mod_4)
show.link('BCPE)
show.link('BCPE')
title: "Oil Project - Ivan"
library(rmarkdown)
title: "Oil Project - Ivan"
